{"name":"Codingandroidapplearn","tagline":"学习CodingAndroidApp源码","body":"Coding Android客户端（versionCode92 Name3.2.5）源码学习笔记\r\n+1.EntranceActivity 默认启动界面\r\n+\t1.1继承关系 EntranceActivity--BaseActivity--UmengActivity\r\n+\t\t1.1.1 UmengActivity接入UmengSdk，加入友盟统计功能\r\n+\t\t1.1.2 BaseActivity Activity模板\r\n+\t\t\t\t1.1.2.1 SingleToast类 Toast的管理工具类，除了构造方法外，还有四个方法，控制Toast显示的不同位置\r\n+\t\t\t\t1.1.2.2 NetworkImpl 网络请求工具类\r\n+\t\t\t\t\t1.1.2.3 loadData 方法分析\r\n+\t\t\t\t\t    \tpublic void loadData(String url, RequestParams params, final String tag, final int dataPos, final Object data, final Request type)\r\n+\t\t\t\t\t    \turl：请求地址\r\n+\t\t\t\t\t    \tparams:参数\r\n+\t\t\t\t\t    \t其他参数尚未搞懂什么意思==\r\n+\t\t\t\t\t    \t进入函数时首先保证url以http开头，\r\n+\t\t\t\t\t    \tif (!url.startsWith(\"http\")) {\r\n+\t\t\t\t\t            url = Global.HOST + url;\r\n+\t\t\t\t\t        }\r\n+\t\t\t\t\t        实用，不判断使用协议，网络请求会报错。\r\n+\t\t\t\t\t        if (mUpdateing.containsKey(tag) && mUpdateing.get(tag)) {\r\n+\t\t\t\t\t            Log.d(\"\", \"url#\" + (params == null ? \"get \" : \"post \") + url);\r\n+\t\t\t\t\t            return;\r\n+\t\t\t\t\t        }\r\n+\r\n+\t\t\t\t\t        mUpdateing.put(tag, true);\r\n+\t\t\t\t\t        尚未看懂 ==\r\n+\t        \t1.1.2.3 源码分析\r\n+\t        \t\tonCreate函数中初始化了吐司工具类、网络请求工具类、进度条小菊花的设置。\r\n+\t        \t\tUnreadNotify.update(this);暂时未懂该功能==\r\n+\t        \t\t容易遗漏的地方是onDestory中，当progressDialog不为空时，需要dismiss并置为null\r\n+\t        \t\tgetNextPagework\r\n+\t        \t\tpostNetwork\r\n+\t        \t\tgetNetwork\r\n+\t        \t\tputNetwork\r\n+\t        \t\tdeleteNetwork\r\n+\t        \t\t这五个函数调网络接口，暂时未看==\r\n+\t    1.1.3 EntranceActivity 欢迎页面 BaseActivity的具体实现之一\r\n+\t    \tUserObject猜测为储存用户的资料，用于请求接口时的校验，尚未验证==\r\n+\t    \t首页动画，随机展示背景图中的任意一幅图，在LoginBackGround工具类中，首先读取所有背景，生成随机数，展示第n幅图\t\r\n+\t    \toverridePendingTransition(R.anim.scroll_in, R.anim.scroll_out); activity之间的切换动画，从第一个参数是第二个activity进入的动画，第二个参数是第一个activity退出的动画，R.anim.scroll_in代码示例：\r\n+\t    \t<set xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n+\t\t    android:duration=\"700\">\r\n+\t\t\t    <translate\r\n+\t\t\t        android:duration=\"700\"\r\n+\t\t\t        android:fromXDelta=\"100%p\"\r\n+\t\t\t        android:toXDelta=\"0%p\" />\r\n+\t\t\t    <!--<alpha-->\r\n+\t\t\t    <!--android:duration=\"700\"-->\r\n+\t\t\t    <!--android:fromAlpha=\"1.0\"-->\r\n+\t\t\t    <!--android:toAlpha=\"1.0\" />-->\r\n+\t\t\t</set>\r\n+\t\t\tactivity从右向左进入屏幕\r\n+                1.1.4 LoginActivity 登录界面\r\n+\t\t\t进入界面，根据上文猜测的某个Key，判断是否需要验证码，并在downloadValifyPhoto函数中下载验证码\r\n+\r\n+\r\n+\t\t1.1.5 MainActivity 主界面\r\n+\t\t\t抽屉式布局的实现原理：DrawerLayout DrawerLayout中有两个子元素，第一个子元素为正常显示的内容，第二个子元素为                           +抽屉\r\n+\t\t\tToolBar使用方法：1.在布局文件中使用v7包下的ToolBar，否则sdk<21时无法使用。\r\n+\t\t\t\t\t\t\t2.修改style.xml中的样式，继承DarkActionBar\r\n+\t\t\t\t\t\t\t3.在style.xml中的style中增加属性和对应的值，<item +name=\"windowActionBar\">false</item>，<item name=\"windowNoTitle\">true</item>，另有一个属性为colorPrimary，值为Toolbar的背景颜+色。在sdk>21时，另有新增的api可以修改状态栏颜色，属性名为colorPrimaryDark，值为颜色。\r\n+\t\t\t\t\t\t\t4.在Java代码中，首先绑定ToolBar，然后重写onCreateOptionsMenu方法，绑定+menu.xml文件，实例化一个Toolbar.OnMenuItemClickListener对象，设置菜单的监听事件。\r\n+SwipeRefreshLayout:google官方的下拉刷新库，使用方法\r\n+\t\t\t\t\t\t\t1.布局文件中注意使用v4包\r\n+\t\t\t\t\t\t\t2.swipeRefreshLayout是一个ViewGroup，其子元素控件目前发现只能是+listview，gridview（RecyclerView尚未尝试），其他控件，如LinearLayout,RelativeLayout等会出现刷新问题\r\n+\t\t\t\t\t\t\t3.在Java代码中，setColorSchemeResources可以设置刷新时的颜色，可以同时设+置多种颜色\r\n+\t\t\t\t\t\t\t4.回调函数onRefresh处于子线程，需用Handler抛回主线程，并设置+swipeRefreshLayout.setRefreshing(false)结束刷新","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}